"""Added dates to compliance entity sanction

Revision ID: 247e75f5c024
Revises: 7f2db642004d
Create Date: 2018-05-31 14:53:31.362850

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import Sequence, CreateSequence, DropSequence

# revision identifiers, used by Alembic.
revision = '247e75f5c024'
down_revision = '7f2db642004d'
branch_labels = None
depends_on = None


severity = postgresql.ENUM(
    'UNKNOWN', 'OK', 'WARNING', 'CRITICAL', name='severity')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    conn.execute('''TRUNCATE compliance_entity_sanctions CASCADE;''')
    op.execute(CreateSequence(Sequence("compliance_entity_sanctions_id_seq")))
    op.add_column(
        'compliance_entity_sanctions',
        sa.Column('end_date', sa.Date(), nullable=True),
    )
    op.add_column(
        'compliance_entity_sanctions',
        sa.Column('severity', severity, nullable=False),
    )
    op.add_column(
        'compliance_entity_sanctions',
        sa.Column('start_date', sa.Date(), nullable=True),
    )
    op.add_column(
        'compliance_entity_sanctions',
        sa.Column(
            'id', sa.Integer(), nullable=False, autoincrement=True,
            server_default=sa.text(
                "nextval('compliance_entity_sanctions_id_seq'::regclass)"),
        ),
    )
    op.drop_column('compliance_sanctions', 'end_date')
    op.drop_column('compliance_sanctions', 'start_date')
    op.drop_column('compliance_sanctions', 'is_active')
    op.drop_column('compliance_sanctions', 'severity')
    op.drop_constraint(
        'sanction_id_entity_id', 'compliance_entity_sanctions', type_='unique')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    conn.execute('''TRUNCATE compliance_sanctions CASCADE;''')
    op.add_column(
        'compliance_sanctions',
        sa.Column(
            'severity', severity,  autoincrement=False, nullable=False),
    )
    op.add_column(
        'compliance_sanctions',
        sa.Column(
            'is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        'compliance_sanctions',
        sa.Column(
            'start_date', sa.DATE(), autoincrement=False, nullable=True),
    )
    op.add_column(
        'compliance_sanctions',
        sa.Column(
            'end_date', sa.DATE(), autoincrement=False, nullable=True),
    )
    op.drop_column('compliance_entity_sanctions', 'start_date')
    op.drop_column('compliance_entity_sanctions', 'severity')
    op.drop_column('compliance_entity_sanctions', 'end_date')
    op.drop_column('compliance_entity_sanctions', 'id')
    op.create_unique_constraint(
        'sanction_id_entity_id', 'compliance_entity_sanctions',
        ['compliance_sanction_id', 'compliance_entity_id'],
    )
    op.execute(DropSequence(Sequence("compliance_entity_sanctions_id_seq")))
    # ### end Alembic commands ###
