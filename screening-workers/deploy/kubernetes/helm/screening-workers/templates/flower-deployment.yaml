{{- if .Values.flower.enabled -}}
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "screening-workers.flower.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ template "screening-workers.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.flower.name | quote }}
spec:
  replicas: {{ .Values.flower.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "screening-workers.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.flower.name | quote }}
  template:
    metadata:
      labels:
        app: {{ template "screening-workers.name" . }}
        release: {{ .Release.Name }}
        component: {{ .Values.flower.name | quote }}
    spec:
      containers:
      - name: {{ .Chart.Name }}-{{ .Values.flower.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - celery
        args:
        - flower
        - -A
        - screening_workers
        - --address=0.0.0.0
        - --port=5555
        envFrom:
        - configMapRef:
            name: {{ template "screening-workers.fullname" . }}
        env:
        {{- if .Values.postgresql.enabled }}
        - name: DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-password
        {{- end }}
        ports:
        - name: http
          containerPort: 5555
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 120
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
{{- end }}
