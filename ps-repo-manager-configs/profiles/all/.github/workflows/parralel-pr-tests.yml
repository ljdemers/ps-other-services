name: Parallel PR Tests

on: [pull_request]

permissions: # FIXME do per actual step
  id-token: write # jwt token
  actions: read # gh actions
  contents: read # repo

jobs:
  find_tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          lfs: true
      - id: set-matrix
        run: |
          export TEST_COMMAND_ARRAY=`grep pr-test.*: Makefile | sed 's/\://g' | jq -R -s -c 'split("\n")[:-1]'`
          echo "::set-output name=matrix::{\"make_command\":${TEST_COMMAND_ARRAY}}"

  run_tests:
    runs-on: ubuntu-latest
    needs: find_tests
    strategy:
      matrix: ${{fromJSON(needs.find_tests.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0
      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: install poetry
        run: pip install poetry
        shell: bash
      - name: Configure AWS credentials from tools account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.POLESTAR_TOOLS }}:role/github-pr-role
          aws-region: us-east-1

      - name: Login public ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Login private ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set useful envs
        run: |
          GITHUB_EVENT_PULL_REQUEST_BASE_SHA=${{ github.event.pull_request.base.sha }}
          echo "GITHUB_EVENT_PULL_REQUEST_BASE_SHA=${GITHUB_EVENT_PULL_REQUEST_BASE_SHA}" >> $GITHUB_ENV

      - name: Generate codeartifact token and make available
        run: |
          CODEARTIFACT_TOKEN=$(aws codeartifact get-authorization-token --domain polestar-tools --domain-owner 324252367609 --query authorizationToken --output text)
          echo "CODEARTIFACT_TOKEN=${CODEARTIFACT_TOKEN}" >> $GITHUB_ENV

      - name: Run
        run: make ${{ matrix.make_command }}
